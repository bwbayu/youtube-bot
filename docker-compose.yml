services:
  postgres:
    container_name: postgres-db
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB: botjudol
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "root"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    container_name: redis-server
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
  fastapi:
    container_name: fastapi-botjudol
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./server:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ./server/.env
    command: uvicorn app:app --host 0.0.0.0 --port 8000 --reload
  react:
    container_name: react-botjudol
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./client:/app
      - /app/node_modules
    stdin_open: true
    tty: true
    depends_on:
      - fastapi

volumes:
  db_data:
  redis-data: